//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

namespace ServiceData
{
    // 
    // This source code was auto-generated by wsdl, Version=2.0.50727.42.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "CoreServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class CoreService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback GetContextDataOperationCompleted;

        /// <remarks/>
        public CoreService()
        {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["CoreService"];
            if ((urlSetting != null))
            {
                this.Url = urlSetting;
            }
            else
            {
                this.Url = "http://pmsa.com.vn/pmsa.service.data/Core/CoreService.asmx";
            }
        }

        /// <remarks/>
        public event GetContextDataCompletedEventHandler GetContextDataCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetContextData", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContextData(string inputValue)
        {
            object[] results = this.Invoke("GetContextData", new object[] {
                    inputValue});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetContextData(string inputValue, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetContextData", new object[] {
                    inputValue}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetContextData(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetContextDataAsync(string inputValue)
        {
            this.GetContextDataAsync(inputValue, null);
        }

        /// <remarks/>
        public void GetContextDataAsync(string inputValue, object userState)
        {
            if ((this.GetContextDataOperationCompleted == null))
            {
                this.GetContextDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContextDataOperationCompleted);
            }
            this.InvokeAsync("GetContextData", new object[] {
                    inputValue}, this.GetContextDataOperationCompleted, userState);
        }

        private void OnGetContextDataOperationCompleted(object arg)
        {
            if ((this.GetContextDataCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContextDataCompleted(this, new GetContextDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetContextDataCompletedEventHandler(object sender, GetContextDataCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContextDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetContextDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}