//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;
namespace CallCenter
{
    // 
    // This source code was auto-generated by wsdl, Version=2.0.50727.42.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ServiceSoap", Namespace = "http://tempuri.org/")]
    public partial class Service : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback CallCenterProcessOperationCompleted;

        private System.Threading.SendOrPostCallback SMS_ReplyOperationCompleted;

        private System.Threading.SendOrPostCallback SendMailOperationCompleted;

        private System.Threading.SendOrPostCallback SendMailAdvOperationCompleted;

        private System.Threading.SendOrPostCallback SendMailAdvNewOperationCompleted;

        private System.Threading.SendOrPostCallback GetUnsendMessageOperationCompleted;

        private System.Threading.SendOrPostCallback ReportSMSOperationCompleted;

        private System.Threading.SendOrPostCallback SendMultiMailOperationCompleted;

        private System.Threading.SendOrPostCallback SendMailTestOperationCompleted;

        /// <remarks/>
        public Service()
        {
            string urlSetting = System.Configuration.ConfigurationManager.AppSettings["Callcenter"];
            if ((urlSetting != null))
            {
                this.Url = urlSetting;
            }
            else
            {
                this.Url = "http://113.161.70.82/iMarkes.Service.Callcenter.Sale/Service.asmx";
            }
        }

        /// <remarks/>
        public event CallCenterProcessCompletedEventHandler CallCenterProcessCompleted;

        /// <remarks/>
        public event SMS_ReplyCompletedEventHandler SMS_ReplyCompleted;

        /// <remarks/>
        public event SendMailCompletedEventHandler SendMailCompleted;

        /// <remarks/>
        public event SendMailAdvCompletedEventHandler SendMailAdvCompleted;

        /// <remarks/>
        public event SendMailAdvNewCompletedEventHandler SendMailAdvNewCompleted;

        /// <remarks/>
        public event GetUnsendMessageCompletedEventHandler GetUnsendMessageCompleted;

        /// <remarks/>
        public event ReportSMSCompletedEventHandler ReportSMSCompleted;

        /// <remarks/>
        public event SendMultiMailCompletedEventHandler SendMultiMailCompleted;

        /// <remarks/>
        public event SendMailTestCompletedEventHandler SendMailTestCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CallCenterProcess", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CallCenterProcess(string strProvider, int iFuntionNumber, int iOutputType, string strOutputLocation, string strContent)
        {
            object[] results = this.Invoke("CallCenterProcess", new object[] {
                    strProvider,
                    iFuntionNumber,
                    iOutputType,
                    strOutputLocation,
                    strContent});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCallCenterProcess(string strProvider, int iFuntionNumber, int iOutputType, string strOutputLocation, string strContent, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CallCenterProcess", new object[] {
                    strProvider,
                    iFuntionNumber,
                    iOutputType,
                    strOutputLocation,
                    strContent}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCallCenterProcess(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CallCenterProcessAsync(string strProvider, int iFuntionNumber, int iOutputType, string strOutputLocation, string strContent)
        {
            this.CallCenterProcessAsync(strProvider, iFuntionNumber, iOutputType, strOutputLocation, strContent, null);
        }

        /// <remarks/>
        public void CallCenterProcessAsync(string strProvider, int iFuntionNumber, int iOutputType, string strOutputLocation, string strContent, object userState)
        {
            if ((this.CallCenterProcessOperationCompleted == null))
            {
                this.CallCenterProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCallCenterProcessOperationCompleted);
            }
            this.InvokeAsync("CallCenterProcess", new object[] {
                    strProvider,
                    iFuntionNumber,
                    iOutputType,
                    strOutputLocation,
                    strContent}, this.CallCenterProcessOperationCompleted, userState);
        }

        private void OnCallCenterProcessOperationCompleted(object arg)
        {
            if ((this.CallCenterProcessCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CallCenterProcessCompleted(this, new CallCenterProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SMS_Reply", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SMS_Reply(string strProvider, int receiveId, string strSendstr)
        {
            object[] results = this.Invoke("SMS_Reply", new object[] {
                    strProvider,
                    receiveId,
                    strSendstr});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSMS_Reply(string strProvider, int receiveId, string strSendstr, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SMS_Reply", new object[] {
                    strProvider,
                    receiveId,
                    strSendstr}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSMS_Reply(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SMS_ReplyAsync(string strProvider, int receiveId, string strSendstr)
        {
            this.SMS_ReplyAsync(strProvider, receiveId, strSendstr, null);
        }

        /// <remarks/>
        public void SMS_ReplyAsync(string strProvider, int receiveId, string strSendstr, object userState)
        {
            if ((this.SMS_ReplyOperationCompleted == null))
            {
                this.SMS_ReplyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSMS_ReplyOperationCompleted);
            }
            this.InvokeAsync("SMS_Reply", new object[] {
                    strProvider,
                    receiveId,
                    strSendstr}, this.SMS_ReplyOperationCompleted, userState);
        }

        private void OnSMS_ReplyOperationCompleted(object arg)
        {
            if ((this.SMS_ReplyCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SMS_ReplyCompleted(this, new SMS_ReplyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMail(string strAddrTo, string strSubject, string strBody, string strFileName1, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent1, string strFileName2, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent2, string strFileName3, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent3)
        {
            object[] results = this.Invoke("SendMail", new object[] {
                    strAddrTo,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMail(string strAddrTo, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMail", new object[] {
                    strAddrTo,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendMailAsync(string strAddrTo, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3)
        {
            this.SendMailAsync(strAddrTo, strSubject, strBody, strFileName1, bFileContent1, strFileName2, bFileContent2, strFileName3, bFileContent3, null);
        }

        /// <remarks/>
        public void SendMailAsync(string strAddrTo, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3, object userState)
        {
            if ((this.SendMailOperationCompleted == null))
            {
                this.SendMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailOperationCompleted);
            }
            this.InvokeAsync("SendMail", new object[] {
                    strAddrTo,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3}, this.SendMailOperationCompleted, userState);
        }

        private void OnSendMailOperationCompleted(object arg)
        {
            if ((this.SendMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailCompleted(this, new SendMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailAdv", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailAdv(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, string strFileName1, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent1, string strFileName2, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent2, string strFileName3, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] bFileContent3)
        {
            object[] results = this.Invoke("SendMailAdv", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMailAdv(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMailAdv", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendMailAdv(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendMailAdvAsync(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3)
        {
            this.SendMailAdvAsync(strAddrTo, strAddCC, strAddBCC, strSubject, strBody, strFileName1, bFileContent1, strFileName2, bFileContent2, strFileName3, bFileContent3, null);
        }

        /// <remarks/>
        public void SendMailAdvAsync(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, string strFileName1, byte[] bFileContent1, string strFileName2, byte[] bFileContent2, string strFileName3, byte[] bFileContent3, object userState)
        {
            if ((this.SendMailAdvOperationCompleted == null))
            {
                this.SendMailAdvOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailAdvOperationCompleted);
            }
            this.InvokeAsync("SendMailAdv", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    strFileName1,
                    bFileContent1,
                    strFileName2,
                    bFileContent2,
                    strFileName3,
                    bFileContent3}, this.SendMailAdvOperationCompleted, userState);
        }

        private void OnSendMailAdvOperationCompleted(object arg)
        {
            if ((this.SendMailAdvCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailAdvCompleted(this, new SendMailAdvCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailAdvNew", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailAdvNew(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, CFileAttach[] AFiles)
        {
            object[] results = this.Invoke("SendMailAdvNew", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    AFiles});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMailAdvNew(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, CFileAttach[] AFiles, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMailAdvNew", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    AFiles}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendMailAdvNew(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendMailAdvNewAsync(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, CFileAttach[] AFiles)
        {
            this.SendMailAdvNewAsync(strAddrTo, strAddCC, strAddBCC, strSubject, strBody, AFiles, null);
        }

        /// <remarks/>
        public void SendMailAdvNewAsync(string strAddrTo, string strAddCC, string strAddBCC, string strSubject, string strBody, CFileAttach[] AFiles, object userState)
        {
            if ((this.SendMailAdvNewOperationCompleted == null))
            {
                this.SendMailAdvNewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailAdvNewOperationCompleted);
            }
            this.InvokeAsync("SendMailAdvNew", new object[] {
                    strAddrTo,
                    strAddCC,
                    strAddBCC,
                    strSubject,
                    strBody,
                    AFiles}, this.SendMailAdvNewOperationCompleted, userState);
        }

        private void OnSendMailAdvNewOperationCompleted(object arg)
        {
            if ((this.SendMailAdvNewCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailAdvNewCompleted(this, new SendMailAdvNewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUnsendMessage", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUnsendMessage(System.DateTime dSentDate)
        {
            object[] results = this.Invoke("GetUnsendMessage", new object[] {
                    dSentDate});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetUnsendMessage(System.DateTime dSentDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetUnsendMessage", new object[] {
                    dSentDate}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetUnsendMessage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetUnsendMessageAsync(System.DateTime dSentDate)
        {
            this.GetUnsendMessageAsync(dSentDate, null);
        }

        /// <remarks/>
        public void GetUnsendMessageAsync(System.DateTime dSentDate, object userState)
        {
            if ((this.GetUnsendMessageOperationCompleted == null))
            {
                this.GetUnsendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnsendMessageOperationCompleted);
            }
            this.InvokeAsync("GetUnsendMessage", new object[] {
                    dSentDate}, this.GetUnsendMessageOperationCompleted, userState);
        }

        private void OnGetUnsendMessageOperationCompleted(object arg)
        {
            if ((this.GetUnsendMessageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUnsendMessageCompleted(this, new GetUnsendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ReportSMS", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReportSMS(System.DateTime fromDate, System.DateTime toDate)
        {
            object[] results = this.Invoke("ReportSMS", new object[] {
                    fromDate,
                    toDate});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginReportSMS(System.DateTime fromDate, System.DateTime toDate, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ReportSMS", new object[] {
                    fromDate,
                    toDate}, callback, asyncState);
        }

        /// <remarks/>
        public string EndReportSMS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ReportSMSAsync(System.DateTime fromDate, System.DateTime toDate)
        {
            this.ReportSMSAsync(fromDate, toDate, null);
        }

        /// <remarks/>
        public void ReportSMSAsync(System.DateTime fromDate, System.DateTime toDate, object userState)
        {
            if ((this.ReportSMSOperationCompleted == null))
            {
                this.ReportSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReportSMSOperationCompleted);
            }
            this.InvokeAsync("ReportSMS", new object[] {
                    fromDate,
                    toDate}, this.ReportSMSOperationCompleted, userState);
        }

        private void OnReportSMSOperationCompleted(object arg)
        {
            if ((this.ReportSMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReportSMSCompleted(this, new ReportSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMultiMail", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMultiMail(string sContentFile, string sEmailListFile)
        {
            object[] results = this.Invoke("SendMultiMail", new object[] {
                    sContentFile,
                    sEmailListFile});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMultiMail(string sContentFile, string sEmailListFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMultiMail", new object[] {
                    sContentFile,
                    sEmailListFile}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendMultiMail(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendMultiMailAsync(string sContentFile, string sEmailListFile)
        {
            this.SendMultiMailAsync(sContentFile, sEmailListFile, null);
        }

        /// <remarks/>
        public void SendMultiMailAsync(string sContentFile, string sEmailListFile, object userState)
        {
            if ((this.SendMultiMailOperationCompleted == null))
            {
                this.SendMultiMailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMultiMailOperationCompleted);
            }
            this.InvokeAsync("SendMultiMail", new object[] {
                    sContentFile,
                    sEmailListFile}, this.SendMultiMailOperationCompleted, userState);
        }

        private void OnSendMultiMailOperationCompleted(object arg)
        {
            if ((this.SendMultiMailCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMultiMailCompleted(this, new SendMultiMailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendMailTest", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendMailTest(string sendTo, string sendCC, string sendBCC, string sendSubject, string sendMessage)
        {
            object[] results = this.Invoke("SendMailTest", new object[] {
                    sendTo,
                    sendCC,
                    sendBCC,
                    sendSubject,
                    sendMessage});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSendMailTest(string sendTo, string sendCC, string sendBCC, string sendSubject, string sendMessage, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SendMailTest", new object[] {
                    sendTo,
                    sendCC,
                    sendBCC,
                    sendSubject,
                    sendMessage}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSendMailTest(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SendMailTestAsync(string sendTo, string sendCC, string sendBCC, string sendSubject, string sendMessage)
        {
            this.SendMailTestAsync(sendTo, sendCC, sendBCC, sendSubject, sendMessage, null);
        }

        /// <remarks/>
        public void SendMailTestAsync(string sendTo, string sendCC, string sendBCC, string sendSubject, string sendMessage, object userState)
        {
            if ((this.SendMailTestOperationCompleted == null))
            {
                this.SendMailTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendMailTestOperationCompleted);
            }
            this.InvokeAsync("SendMailTest", new object[] {
                    sendTo,
                    sendCC,
                    sendBCC,
                    sendSubject,
                    sendMessage}, this.SendMailTestOperationCompleted, userState);
        }

        private void OnSendMailTestOperationCompleted(object arg)
        {
            if ((this.SendMailTestCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendMailTestCompleted(this, new SendMailTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://tempuri.org/")]
    public partial class CFileAttach
    {

        private string fileNameField;

        private byte[] fileByteField;

        /// <remarks/>
        public string FileName
        {
            get
            {
                return this.fileNameField;
            }
            set
            {
                this.fileNameField = value;
            }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] FileByte
        {
            get
            {
                return this.fileByteField;
            }
            set
            {
                this.fileByteField = value;
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CallCenterProcessCompletedEventHandler(object sender, CallCenterProcessCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CallCenterProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CallCenterProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SMS_ReplyCompletedEventHandler(object sender, SMS_ReplyCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SMS_ReplyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SMS_ReplyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SendMailCompletedEventHandler(object sender, SendMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SendMailAdvCompletedEventHandler(object sender, SendMailAdvCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailAdvCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMailAdvCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SendMailAdvNewCompletedEventHandler(object sender, SendMailAdvNewCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailAdvNewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMailAdvNewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetUnsendMessageCompletedEventHandler(object sender, GetUnsendMessageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUnsendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetUnsendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void ReportSMSCompletedEventHandler(object sender, ReportSMSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReportSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ReportSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SendMultiMailCompletedEventHandler(object sender, SendMultiMailCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMultiMailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMultiMailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SendMailTestCompletedEventHandler(object sender, SendMailTestCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendMailTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SendMailTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}